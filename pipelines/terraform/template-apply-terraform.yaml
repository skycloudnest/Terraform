parameters:
  - name: artifactName
    type: string
  - name: environmentName
    type: string
  - name: projectLocation
    type: string
  - name: backendServiceArm
    type: string
  - name: bckco
    type: string
  - name: bckke
    type: string

steps:
- checkout: self

- task: DownloadBuildArtifacts@1
  inputs:
    artifactName: ${{parameters.artifactName}}

- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: "$(System.ArtifactsDirectory)/${{parameters.artifactName}}/${{parameters.artifactName}}.zip"
    destinationFolder: "$(System.DefaultWorkingDirectory)"
    cleanDestinationFolder: false
  displayName: "Extract Terraform Files"
  
- task: AzureCLI@2
  displayName: Create container for Terraform state if not exists
  inputs:
    azureSubscription: ${{parameters.backendServiceArm}}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: 'az storage container create -n ${{ parameters.bckco }} --account-name $(bcksa)'

- task: TerraformInstaller@1
  displayName: tfinstall
  inputs:
    terraformVersion: "latest"

- task: TerraformTaskV4@4
  displayName: tfinit
  inputs:
    provider: "azurerm"
    command: "init"
    workingDirectory: ${{parameters.projectLocation}}
    backendServiceArm: ${{parameters.backendServiceArm}}
    backendAzureRmResourceGroupName: $(bckrg)
    backendAzureRmStorageAccountName: $(bcksa)
    backendAzureRmContainerName: ${{parameters.bckco}}
    backendAzureRmKey: ${{parameters.bckke}}

- task: TerraformTaskV4@4
  displayName: tfplan
  name: tfplan
  inputs:
    provider: "azurerm"
    command: "plan"
    workingDirectory: ${{parameters.projectLocation}}
    commandOptions: >-
      -var-file=environments/${{parameters.environmentName}}.tfvars
      -var workspace_directory=$(Pipeline.Workspace)
      -input=false
      -out=tfplan.out
    environmentServiceNameAzureRM: ${{parameters.backendServiceArm}}

- task: TerraformTaskV4@4
  displayName: tfapply
  name: tfapply
  inputs:
    provider: "azurerm"
    command: "apply"
    workingDirectory: ${{parameters.projectLocation}}
    commandOptions: "tfplan.out"
    environmentServiceNameAzureRM: ${{parameters.backendServiceArm}}

- task: TerraformTaskV4@4
  displayName: tfoutput
  name: tfoutput
  inputs:
    provider: "azurerm"
    command: "output"
    workingDirectory: ${{parameters.projectLocation}}
    environmentServiceNameAzureRM: ${{parameters.backendServiceArm}}